When would you want to use a remote repository rather than keeping all your work
local?

   To share with other people.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because in this way, I can choose what status to be stored on the GitHub's repository
    and this way is more easier, up-to-date is covenient to choose when or how to update.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branch used for new feature, forks for get other's GitHub's repository to my GitHub's
    repository, clones get other's or my Github's to my local repository. Branches is definite.
    Between forks and clones is that when you are a collaborator, just use clones, but not,
    use forks.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    With the copy, without internet access, user can also do operations util with internet access to fetch and merge.
    use the copy, users can cooperation more convenient.


How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    If without Git or GitHub, I could collaborate by checking every file. If the project is small would be easier,
    but when project is big and collaborators are many, collaborate manually is so hard!

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    When collaborate with other people and I do some change but I want other collaborators to know the change and give the comment, I could use separate branch. When there is someting I am not sure, I cannot make changes directly in master. Separate branch could make sure the new change is notified by collaborators, would't directly change the master reckless. When you are sure you can do some change, directly in master is so convenient.
